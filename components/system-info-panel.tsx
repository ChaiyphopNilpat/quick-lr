"use client"

import { Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import type { QuantumAnalysis } from "@/lib/real-time-service"

interface SystemInfoPanelProps {
  connectedDevices: number
  visibleTypes: Record<string, boolean>
  onToggleFilter: (type: string) => void
  quantumAnalysis?: QuantumAnalysis | null
  gpsEnabled?: boolean
  currentLocation?: { lat: number; lng: number } | null
}

export default function SystemInfoPanel({
  connectedDevices,
  visibleTypes,
  onToggleFilter,
  quantumAnalysis,
  gpsEnabled,
  currentLocation,
}: SystemInfoPanelProps) {
  const filterButtons = [
    { type: "GPS", icon: "üöì" },
    { type: "RADIO", icon: "üìª" },
    { type: "REPORT", icon: "üë•" },
    { type: "PERSON", icon: "üö∂‚Äç‚ôÇÔ∏è" },
  ]

  return (
    <>
      <Card className="glass-panel p-4">
        <h2 className="text-lg font-semibold text-surveillance-cyan mb-2">‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö</h2>
        <div className="text-sm text-muted-foreground space-y-2">
          <p>
            <strong>1. ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå (‡∏£‡∏±‡∏®‡∏°‡∏µ 1 ‡∏Å‡∏°.):</strong>
            <br />
            ‡∏£‡∏∞‡∏ö‡∏ö "‡πÅ‡∏ï‡∏Å‡πÄ‡∏ã‡∏•‡∏•‡πå" ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏±‡∏ö‡∏û‡∏±‡∏ô‡∏ä‡∏¥‡πâ‡∏ô‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô
          </p>
          <p>
            <strong>2. ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•:</strong>
            <br />
            AI ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°, ‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°, ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
          </p>
          <p>
            <strong>3. ‡∏Å‡∏•‡πÑ‡∏Å‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå (AI Core):</strong>
            <br />
            AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞ <strong>‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</strong> ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏ "‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå" ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏à‡∏£‡∏¥‡∏á‡πÜ
          </p>
        </div>
      </Card>

      <Card className="glass-panel p-4">
        <h2 className="text-lg font-semibold text-surveillance-cyan mb-3">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°</h2>
        <div className="space-y-3 text-sm">
          <div className="flex justify-between items-center">
            <span className="text-muted-foreground">AI Core Status:</span>
            <div className="flex items-center gap-2">
              <div className="status-dot bg-surveillance-green"></div>
              <span className="font-semibold text-surveillance-green">NOMINAL</span>
            </div>
          </div>
          <div className="flex justify-between items-center">
            <span className="text-muted-foreground">Behavioral Scan:</span>
            <div className="flex items-center gap-2">
              <div className="status-dot bg-surveillance-purple"></div>
              <span className="font-semibold text-surveillance-purple">ACTIVE</span>
            </div>
          </div>
          <div className="flex justify-between items-center">
            <span className="text-muted-foreground">GPS Tracking:</span>
            <div className="flex items-center gap-2">
              <div className={`status-dot ${gpsEnabled ? "bg-surveillance-green" : "bg-surveillance-red"}`}></div>
              <span className={`font-semibold ${gpsEnabled ? "text-surveillance-green" : "text-surveillance-red"}`}>
                {gpsEnabled ? "ACTIVE" : "OFFLINE"}
              </span>
            </div>
          </div>
          <div className="flex justify-between items-center">
            <span className="text-muted-foreground">‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ (1 ‡∏Å‡∏°.):</span>
            <span className="font-semibold text-foreground font-mono transition-all duration-300">
              {connectedDevices.toLocaleString("en-US")}
            </span>
          </div>
          {currentLocation && (
            <div className="flex justify-between items-center text-xs">
              <span className="text-muted-foreground">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</span>
              <span className="font-mono text-surveillance-cyan">
                {currentLocation.lat.toFixed(6)}, {currentLocation.lng.toFixed(6)}
              </span>
            </div>
          )}
        </div>

        {quantumAnalysis && (
          <>
            <hr className="border-border my-4" />
            <div className="space-y-2 text-xs">
              <h3 className="text-sm font-semibold text-surveillance-purple">Quantum AI Analysis</h3>
              <div className="flex justify-between">
                <span className="text-muted-foreground">Threat Level:</span>
                <span
                  className={`font-semibold ${
                    quantumAnalysis.threatLevel > 0.8
                      ? "text-surveillance-red"
                      : quantumAnalysis.threatLevel > 0.6
                        ? "text-surveillance-yellow"
                        : "text-surveillance-green"
                  }`}
                >
                  {(quantumAnalysis.threatLevel * 100).toFixed(1)}%
                </span>
              </div>
              <div className="flex justify-between">
                <span className="text-muted-foreground">Confidence:</span>
                <span className="font-semibold text-surveillance-cyan">
                  {(quantumAnalysis.confidence * 100).toFixed(1)}%
                </span>
              </div>
              <div className="flex justify-between">
                <span className="text-muted-foreground">Anomalies:</span>
                <span className="font-semibold text-foreground">{quantumAnalysis.anomaliesDetected}</span>
              </div>
              <div className="mt-2 p-2 bg-background/50 rounded text-xs font-mono text-surveillance-purple">
                {quantumAnalysis.quantumState}
              </div>
            </div>
          </>
        )}

        <hr className="border-border my-4" />

        <p className="text-sm text-muted-foreground mb-2">‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå:</p>
        <div className="grid grid-cols-4 gap-2 text-center text-xl">
          {filterButtons.map(({ type, icon }) => (
            <Button
              key={type}
              variant="ghost"
              size="sm"
              className={`filter-btn glass-panel p-2 h-auto ${visibleTypes[type] ? "active" : ""}`}
              onClick={() => onToggleFilter(type)}
            >
              {icon}
            </Button>
          ))}
        </div>
      </Card>
    </>
  )
}
